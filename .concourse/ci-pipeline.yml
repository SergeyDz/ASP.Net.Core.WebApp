---
resource_types:
- name: cogito
  type: registry-image
  check_every: 1h
  source:
    repository: pix4d/cogito

resources:
- name: gh-status
  type: cogito
  check_every: 1h
  source:
    owner: SergeyDz
    repo: ASP.Net.Core.WebApp
    access_token: ((githubtoken))

# The repo with our Dockerfile
- name: asp-net-core-webapp-source
  type: git
  icon: github
  source:
    uri: https://github.com/SergeyDz/ASP.Net.Core.WebApp.git
    branch: main

# Where we will push the image
- name: asp-net-core-webapp-docker
  type: registry-image
  icon: docker
  source:
    repository: ((image-repo-name))/asp.net.core.webapp
    username: ((registry-username))
    password: ((dockerhub))


jobs:
- name: build-and-push
  on_success:
    put: gh-status
    inputs: [asp-net-core-webapp-source]
    params: {state: success}
  on_failure:
    put: gh-status
    inputs: [asp-net-core-webapp-source]
    params: {state: failure}
  on_error:
    put: gh-status
    inputs: [asp-net-core-webapp-source]
    params: {state: error}
    
  plan:
  - get: asp-net-core-webapp-source
  - task: build-task-image
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      - name: asp-net-core-webapp-source
      outputs:
      - name: image
      params:
        CONTEXT: asp-net-core-webapp-source
        UNPACK_ROOTFS: "true" # only needed if using image in a future step
      run:
        path: build
  - put: asp-net-core-webapp-docker
    params:
      image: image/image.tar
      version: '1.0'